
1，常用规范

类：
类命为名词词组
类名首字母大写
驼峰命名
不使用可写页面内全局变量

类要单一化，处理一件事或一类事


方法：
方法名 动宾短语，可使用do
驼峰命名
函数名中每一个逻辑断点都有一个大写字母来标记
在JS中私有方法可以加_
在lua中私有方法可以加

文件夹：
lua：
js：遵循node-js的习惯

文件：
与类名同，一个文件就是一个类

变量：
常量名全大写，中间用 _ 隔开
全局变量使用 g_
参数变量用驼峰命名
内部变量self. 和 this.
不允许使用tmp_，temp_

名字要准确，多长都行

组织结构：
有逻辑联系的都放在一起，父子兄弟关系
组件之间最好层次嵌套：页面组件->控件


其它：
当不需要实例化的类，使用单例
层级间调用，上层调用下层，下层不允许调用上层,具体表现：
最上层，与需求及业务联系很紧，定制式，每往下一层，约束一环，最低层与业务无关,层级之间，多用消息


2，数据形式
增加数据层
数据层与界面分离
要求能模拟数据发送
读取数据->解析数据->数据->数据控制->展示数据

游戏可以考虑使用状态机


